group 'com.demo'
version '1.0'
apply plugin: 'java'
sourceCompatibility = 1.8

buildscript {
    ext {
        //定义一个变量，统一规定springboot的版本
        springBootVersion = '2.1.5.RELEASE'
        springCloudVersion = 'Greenwich.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        //用来打包
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
    }
}
allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
        mavenCentral()
    }
    //指定编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

//设定当前模块项目中的配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    //spring boot 插件
    apply plugin: 'org.springframework.boot'
    //A Gradle plugin that provides Maven-like dependency management functionality
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'
    apply plugin: 'com.palantir.docker'

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
    jar {
        enabled = true
//        manifest.attributes provider: 'gradle'
    }
    bootJar {
        classifier = 'boot'
    }
}